services:
  app:
    build:
      context: ./identity-provider   # Spécifie le répertoire où se trouve Dockerfile
      dockerfile: Dockerfile         # Nom du Dockerfile (optionnel si c'est "Dockerfile")
    container_name: node_app
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASS=postgres_password
      - DB_NAME=identity_db
      - JWT_SECRET=your_jwt_secret
    depends_on:
      - postgres

  cryptomonnaie:
    build:
      context: ./Cryptomonnaie
      dockerfile: Dockerfile
    container_name: cryptomonnaie_app
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=identity_db;User Id=postgres;Password=postgres_password;
    volumes:
      - ./Cryptomonnaie/wwwroot:/app/wwwroot
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: identity_db
    ports:
      - "5433:5432"
    volumes:
      - data_protection_keys:/root/.aspnet/DataProtection-Keys
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  data_protection_keys:
